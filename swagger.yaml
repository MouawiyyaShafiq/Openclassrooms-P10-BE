swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
# Phase-2
  /user/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Accounts API
      description: API for fetching a user's accounts
      produces:
        - application/json
      responses:
        '200':
          description: User's accounts retrieved successully
          schema:
            $ref: '#/definitions/AccountsResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: User transactions API
      description: API for fetching a user's transactions by account filtered by current month
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: The ID of the bank account
        - in: query
          name: month
          required: true
          type: string
          description: the current month to filter trasactions by
      produces:
        - application/json
      responses:
        '200':
          description: User's filtered transactions retrieved successully
          schema:
            $ref: '#/definitions/TransactionsResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionId}/details:
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: User transactions details update API
      description: API for updating a user's specified transaction's details
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: The ID of the bank account
        - in: path
          name: transactionId
          required: true
          type: string
          description: The ID of the transaction
        - in: body
          name: details
          required: true
          description: the category or note to add or update in a transaction's details
          schema:
            $ref: '#/definitions/Details'
      produces:
        - application/json
      responses:
        '200':
          description: User's transaction's details updated successully
          schema:
            $ref: '#/definitions/DetailsResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: User transactions details delete API
      description: API for deleting a user's specific transaction's details
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: The ID of the bank account
        - in: path
          name: transactionId
          required: true
          type: string
          description: The ID of the transaction
        - in: body
          name: detailToDelete
          required: true
          description: Specify which detail (category, note) to delete
          schema:
            $ref: '#/definitions/DetailToDelete'
      produces:
        - application/json
      responses:
        '200':
          description: User's transaction's Specified detail deleted successully
          schema:
            $ref: '#/definitions/DetailsDeleteResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

# Phase-2
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string

# Phase-2
  AccountsResponse :
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: '#/definitions/Accounts'
  Accounts :
    type: array
    items:
      $ref: '#/definitions/Account'
  Account :
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      balance:
        type: number
        format: float
  TransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: '#/definitions/Transactions'
  Transactions:
    type: array
    items:
      $ref: '#/definitions/Transaction'
  Transaction:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
        format: date
      description:
        type: string
      amount:
        type: number
        format: float
      balance:
        type: number
        format: float
      transactionType:
        type: string
      details:
        type: object
        properties:
         category:
          type: string
         note:
          type: string
  Details:
    type: object
    properties:
      category:
        type: string
      note:
        type: string
  DetailsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          category:
            type: string
          note:
            type: string
  DetailsDeleteResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
  DetailToDelete:
    type: object
    properties:
      category:
        type: boolean
        description: Set to true to delete the category detail
      note:
        type: boolean
        description: Set to true to delete the note detail
# Phase-2
